generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Restaurant {
  id                String             @id @default(cuid())
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  menu              Menu[]
  weeklySpecial     WeeklySpecial[]
  restaurantSetting RestaurantSetting?

  @@map("restaurant")
}

model Menu {
  id           String     @id @default(cuid())
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  day          String
  food         String
  restaurantId String
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@unique([restaurantId, day])
  @@map("menu")
}

model WeeklySpecial {
  id           String     @id @default(cuid())
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  type         String
  food         String
  restaurantId String
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@unique([restaurantId, type])
  @@map("weekly_special")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("session")
}

model User {
  id       String    @id @default(cuid())
  username String    @unique
  password String
  sessions Session[]

  @@map("user")
}

model RestaurantSetting {
  id           String      @id @default(cuid())
  name         String      @unique
  enabled      Boolean     @default(false)
  homeUrl      String
  lunchUrl     String
  lunchRegex   String?
  weeklyRegex  String?
  restaurantId String      @unique
  restaurant   Restaurant? @relation(fields: [restaurantId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@map("restaurant_setting")
}
